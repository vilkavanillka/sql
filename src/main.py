from fastapi import FastAPI
from src.users.router import router as user_router
from src.query.router import router as query_router

app = FastAPI(
    title="SQL Sandbox"
)

app.include_router(user_router)
app.include_router(query_router)
"""
небольшое ТЗ:
2. Цели и задачи
    • Обеспечить безопасное выполнение SQL-запросов.
    • Обеспечить поддержку различных типов SQL-запросов (SELECT, INSERT, UPDATE, DELETE).
    • Реализовать ограничение по времени выполнения запросов для предотвращения зависания системы.
    • Предоставить пользователям возможность сохранять истории их запросов.

3. Функциональные требования

3.1 Пользовательские функции
    • Регистрация и аутентификация пользователей
        ‣ Поддержка регистрации и входа через email и пароль.

    • Исполнение SQL-запросов
        ‣ Пользователь может вводить и выполнять произвольные SQL-запросы.
        ‣ Возврат результатов выполнения запроса в формате JSON.

    • История запросов
        ‣ Сохранение и отображение истории выполненных запросов пользователя.

2. Функциональные требования

- Создание пользователей
  - Возможность регистрации новых пользователей.
  - Аутентификация пользователей по логину и паролю.
  
- Управление сессиями
  - Запись и управление сессиями выполнения SQL запросов.
  - Автоматическое завершение сессий через заданный период бездействия.

- Выполнение SQL запросов
  - Поддержка выполнения SQL запросов (SELECT, INSERT, UPDATE, DELETE).
  - Ограничение на выполнение запросов на изменение данных для обеспечения безопасности.

- История запросов
  - Сохранение истории выполненных запросов для каждого пользователя.
  - Возможность просмотра и повторного выполнения ранее выполненных запросов.

- Управление ресурсами
  - Ограничение ресурсов (CPU, память, количество одновременных запросов) для каждой сессии пользователя.

- Доступные базы данных
  - Предоставление пользователям ограниченного доступа к тестовым базам данных.
  - Еженедельное обновление тестовых данных.

"""


